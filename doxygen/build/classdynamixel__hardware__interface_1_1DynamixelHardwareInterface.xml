<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classdynamixel__hardware__interface_1_1DynamixelHardwareInterface" kind="class" language="C++" prot="public">
    <compoundname>dynamixel_hardware_interface::DynamixelHardwareInterface</compoundname>
    <basecompoundref prot="public" virt="non-virtual">hardware_interface::BaseInterface&lt; hardware_interface::SystemInterface &gt;</basecompoundref>
    <includes refid="dynamixel__hardware__interface_8hpp" local="no">dynamixel_hardware_interface.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classdynamixel__hardware__interface_1_1DynamixelHardwareInterface_1a8b945e8e564bbde7abfd2e7d5b7447d4" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string dynamixel_hardware_interface::DynamixelHardwareInterface::port_name_</definition>
        <argsstring></argsstring>
        <name>port_name_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/dynamixel_hardware_interface/dynamixel_hardware_interface/include/dynamixel_hardware_interface/dynamixel_hardware_interface.hpp" line="99" column="15" bodyfile="/home/runner/work/dynamixel_hardware_interface/dynamixel_hardware_interface/include/dynamixel_hardware_interface/dynamixel_hardware_interface.hpp" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdynamixel__hardware__interface_1_1DynamixelHardwareInterface_1a027ed49323b295436e1b0e30ca494a16" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int dynamixel_hardware_interface::DynamixelHardwareInterface::baudrate_</definition>
        <argsstring></argsstring>
        <name>baudrate_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/dynamixel_hardware_interface/dynamixel_hardware_interface/include/dynamixel_hardware_interface/dynamixel_hardware_interface.hpp" line="100" column="7" bodyfile="/home/runner/work/dynamixel_hardware_interface/dynamixel_hardware_interface/include/dynamixel_hardware_interface/dynamixel_hardware_interface.hpp" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdynamixel__hardware__interface_1_1DynamixelHardwareInterface_1a9a9e911e0edaf353ef5b0796e450a368" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::shared_ptr&lt; <ref refid="classdynamixel__hardware__interface_1_1MotorBase" kindref="compound">MotorBase</ref> &gt; &gt;</type>
        <definition>std::vector&lt;std::shared_ptr&lt;MotorBase&gt; &gt; dynamixel_hardware_interface::DynamixelHardwareInterface::motors_</definition>
        <argsstring></argsstring>
        <name>motors_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/dynamixel_hardware_interface/dynamixel_hardware_interface/include/dynamixel_hardware_interface/dynamixel_hardware_interface.hpp" line="173" column="15" bodyfile="/home/runner/work/dynamixel_hardware_interface/dynamixel_hardware_interface/include/dynamixel_hardware_interface/dynamixel_hardware_interface.hpp" bodystart="173" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdynamixel__hardware__interface_1_1DynamixelHardwareInterface_1afb5b736369ec24b89e3f9bee77e1cf3f" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; dynamixel::PortHandler &gt;</type>
        <definition>std::shared_ptr&lt;dynamixel::PortHandler&gt; dynamixel_hardware_interface::DynamixelHardwareInterface::port_handler_</definition>
        <argsstring></argsstring>
        <name>port_handler_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/dynamixel_hardware_interface/dynamixel_hardware_interface/include/dynamixel_hardware_interface/dynamixel_hardware_interface.hpp" line="174" column="19" bodyfile="/home/runner/work/dynamixel_hardware_interface/dynamixel_hardware_interface/include/dynamixel_hardware_interface/dynamixel_hardware_interface.hpp" bodystart="174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdynamixel__hardware__interface_1_1DynamixelHardwareInterface_1aa8c186b3f47235c85fef99a21df929a1" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; dynamixel::PacketHandler &gt;</type>
        <definition>std::shared_ptr&lt;dynamixel::PacketHandler&gt; dynamixel_hardware_interface::DynamixelHardwareInterface::packet_handler_</definition>
        <argsstring></argsstring>
        <name>packet_handler_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/dynamixel_hardware_interface/dynamixel_hardware_interface/include/dynamixel_hardware_interface/dynamixel_hardware_interface.hpp" line="175" column="19" bodyfile="/home/runner/work/dynamixel_hardware_interface/dynamixel_hardware_interface/include/dynamixel_hardware_interface/dynamixel_hardware_interface.hpp" bodystart="175" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdynamixel__hardware__interface_1_1DynamixelHardwareInterface_1ad0f44c8124d6768ac06cc181a850ee95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DYNAMIXEL_HARDWARE_INTERFACE_PUBLIC hardware_interface::return_type</type>
        <definition>hardware_interface::return_type dynamixel_hardware_interface::DynamixelHardwareInterface::configure</definition>
        <argsstring>(const hardware_interface::HardwareInfo &amp;info) override</argsstring>
        <name>configure</name>
        <param>
          <type>const hardware_interface::HardwareInfo &amp;</type>
          <declname>info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/dynamixel_hardware_interface/dynamixel_hardware_interface/include/dynamixel_hardware_interface/dynamixel_hardware_interface.hpp" line="73" column="35" bodyfile="/home/runner/work/dynamixel_hardware_interface/dynamixel_hardware_interface/src/dynamixel_hardware_interface.cpp" bodystart="37" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="classdynamixel__hardware__interface_1_1DynamixelHardwareInterface_1a26334a17e6798229f799293bacf2c1bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DYNAMIXEL_HARDWARE_INTERFACE_PUBLIC std::vector&lt; hardware_interface::StateInterface &gt;</type>
        <definition>std::vector&lt; hardware_interface::StateInterface &gt; dynamixel_hardware_interface::DynamixelHardwareInterface::export_state_interfaces</definition>
        <argsstring>() override</argsstring>
        <name>export_state_interfaces</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/dynamixel_hardware_interface/dynamixel_hardware_interface/include/dynamixel_hardware_interface/dynamixel_hardware_interface.hpp" line="77" column="15" bodyfile="/home/runner/work/dynamixel_hardware_interface/dynamixel_hardware_interface/src/dynamixel_hardware_interface.cpp" bodystart="118" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="classdynamixel__hardware__interface_1_1DynamixelHardwareInterface_1af971786f88a914f534fe471c60a2aaad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DYNAMIXEL_HARDWARE_INTERFACE_PUBLIC std::vector&lt; hardware_interface::CommandInterface &gt;</type>
        <definition>std::vector&lt; hardware_interface::CommandInterface &gt; dynamixel_hardware_interface::DynamixelHardwareInterface::export_command_interfaces</definition>
        <argsstring>() override</argsstring>
        <name>export_command_interfaces</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/dynamixel_hardware_interface/dynamixel_hardware_interface/include/dynamixel_hardware_interface/dynamixel_hardware_interface.hpp" line="80" column="15" bodyfile="/home/runner/work/dynamixel_hardware_interface/dynamixel_hardware_interface/src/dynamixel_hardware_interface.cpp" bodystart="131" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="classdynamixel__hardware__interface_1_1DynamixelHardwareInterface_1acf4151e565e4ac699c2116c8ea5c0fdf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DYNAMIXEL_HARDWARE_INTERFACE_PUBLIC hardware_interface::return_type</type>
        <definition>hardware_interface::return_type dynamixel_hardware_interface::DynamixelHardwareInterface::read</definition>
        <argsstring>(const rclcpp::Time &amp;time, const rclcpp::Duration &amp;period) override</argsstring>
        <name>read</name>
        <param>
          <type>const rclcpp::Time &amp;</type>
          <declname>time</declname>
        </param>
        <param>
          <type>const rclcpp::Duration &amp;</type>
          <declname>period</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/dynamixel_hardware_interface/dynamixel_hardware_interface/include/dynamixel_hardware_interface/dynamixel_hardware_interface.hpp" line="91" column="35" bodyfile="/home/runner/work/dynamixel_hardware_interface/dynamixel_hardware_interface/src/dynamixel_hardware_interface.cpp" bodystart="195" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="classdynamixel__hardware__interface_1_1DynamixelHardwareInterface_1a9392d65fc49a2d87071bd8dbeb2aa0f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DYNAMIXEL_HARDWARE_INTERFACE_PUBLIC hardware_interface::return_type</type>
        <definition>hardware_interface::return_type dynamixel_hardware_interface::DynamixelHardwareInterface::write</definition>
        <argsstring>(const rclcpp::Time &amp;time, const rclcpp::Duration &amp;period) override</argsstring>
        <name>write</name>
        <param>
          <type>const rclcpp::Time &amp;</type>
          <declname>time</declname>
        </param>
        <param>
          <type>const rclcpp::Duration &amp;</type>
          <declname>period</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/dynamixel_hardware_interface/dynamixel_hardware_interface/include/dynamixel_hardware_interface/dynamixel_hardware_interface.hpp" line="95" column="35" bodyfile="/home/runner/work/dynamixel_hardware_interface/dynamixel_hardware_interface/src/dynamixel_hardware_interface.cpp" bodystart="224" bodyend="233"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classdynamixel__hardware__interface_1_1DynamixelHardwareInterface_1a15f1ffbcb24f674dfb9cfd11e7b09d4d" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="constants_8hpp_1a7c0ca21c747a25fb3e96bbc8ba058257" kindref="member">SupportedMotors</ref></type>
        <definition>SupportedMotors dynamixel_hardware_interface::DynamixelHardwareInterface::strToSupportMotorsEnum</definition>
        <argsstring>(const std::string &amp;motor_type) const</argsstring>
        <name>strToSupportMotorsEnum</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>motor_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/dynamixel_hardware_interface/dynamixel_hardware_interface/include/dynamixel_hardware_interface/dynamixel_hardware_interface.hpp" line="101" column="19" bodyfile="/home/runner/work/dynamixel_hardware_interface/dynamixel_hardware_interface/src/dynamixel_hardware_interface.cpp" bodystart="143" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="classdynamixel__hardware__interface_1_1DynamixelHardwareInterface_1adc541294f39d35d046806028f7c309be" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T dynamixel_hardware_interface::DynamixelHardwareInterface::getParameter</definition>
        <argsstring>(const std::string key, const hardware_interface::ComponentInfo &amp;info) const</argsstring>
        <name>getParameter</name>
        <param>
          <type>const std::string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const hardware_interface::ComponentInfo &amp;</type>
          <declname>info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/dynamixel_hardware_interface/dynamixel_hardware_interface/include/dynamixel_hardware_interface/dynamixel_hardware_interface.hpp" line="104" column="5" bodyfile="/home/runner/work/dynamixel_hardware_interface/dynamixel_hardware_interface/include/dynamixel_hardware_interface/dynamixel_hardware_interface.hpp" bodystart="104" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="classdynamixel__hardware__interface_1_1DynamixelHardwareInterface_1ab42cb398baff91138d26eae457f14a8c" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void dynamixel_hardware_interface::DynamixelHardwareInterface::getParameter</definition>
        <argsstring>(const std::string &amp;key, const hardware_interface::ComponentInfo &amp;info, std::string &amp;parameter) const</argsstring>
        <name>getParameter</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const hardware_interface::ComponentInfo &amp;</type>
          <declname>info</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/dynamixel_hardware_interface/dynamixel_hardware_interface/include/dynamixel_hardware_interface/dynamixel_hardware_interface.hpp" line="110" column="8" bodyfile="/home/runner/work/dynamixel_hardware_interface/dynamixel_hardware_interface/include/dynamixel_hardware_interface/dynamixel_hardware_interface.hpp" bodystart="110" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="classdynamixel__hardware__interface_1_1DynamixelHardwareInterface_1a02ef84719c417fb8dbe6d4698c39e585" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void dynamixel_hardware_interface::DynamixelHardwareInterface::getParameter</definition>
        <argsstring>(const std::string &amp;key, const hardware_interface::ComponentInfo &amp;info, int &amp;parameter) const</argsstring>
        <name>getParameter</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const hardware_interface::ComponentInfo &amp;</type>
          <declname>info</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/dynamixel_hardware_interface/dynamixel_hardware_interface/include/dynamixel_hardware_interface/dynamixel_hardware_interface.hpp" line="122" column="8" bodyfile="/home/runner/work/dynamixel_hardware_interface/dynamixel_hardware_interface/include/dynamixel_hardware_interface/dynamixel_hardware_interface.hpp" bodystart="122" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="classdynamixel__hardware__interface_1_1DynamixelHardwareInterface_1ae013f782a5399fbc4f56b61062970f67" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void dynamixel_hardware_interface::DynamixelHardwareInterface::getParameter</definition>
        <argsstring>(const std::string &amp;key, const hardware_interface::ComponentInfo &amp;info, bool &amp;parameter) const</argsstring>
        <name>getParameter</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const hardware_interface::ComponentInfo &amp;</type>
          <declname>info</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/dynamixel_hardware_interface/dynamixel_hardware_interface/include/dynamixel_hardware_interface/dynamixel_hardware_interface.hpp" line="129" column="8" bodyfile="/home/runner/work/dynamixel_hardware_interface/dynamixel_hardware_interface/include/dynamixel_hardware_interface/dynamixel_hardware_interface.hpp" bodystart="129" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="classdynamixel__hardware__interface_1_1DynamixelHardwareInterface_1aacc0f26c12661efe1a11d2a9ffdadbbe" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T dynamixel_hardware_interface::DynamixelHardwareInterface::getHardwareParameter</definition>
        <argsstring>(const std::string key) const</argsstring>
        <name>getHardwareParameter</name>
        <param>
          <type>const std::string</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/dynamixel_hardware_interface/dynamixel_hardware_interface/include/dynamixel_hardware_interface/dynamixel_hardware_interface.hpp" line="140" column="5" bodyfile="/home/runner/work/dynamixel_hardware_interface/dynamixel_hardware_interface/include/dynamixel_hardware_interface/dynamixel_hardware_interface.hpp" bodystart="140" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="classdynamixel__hardware__interface_1_1DynamixelHardwareInterface_1a08b5292c0bb72e759c5545737ac2a65f" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void dynamixel_hardware_interface::DynamixelHardwareInterface::getHardwareParameter</definition>
        <argsstring>(const std::string &amp;key, std::string &amp;parameter) const</argsstring>
        <name>getHardwareParameter</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/dynamixel_hardware_interface/dynamixel_hardware_interface/include/dynamixel_hardware_interface/dynamixel_hardware_interface.hpp" line="146" column="8" bodyfile="/home/runner/work/dynamixel_hardware_interface/dynamixel_hardware_interface/include/dynamixel_hardware_interface/dynamixel_hardware_interface.hpp" bodystart="146" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="classdynamixel__hardware__interface_1_1DynamixelHardwareInterface_1a28c5ec187c8843d49d54e75193eb5a34" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void dynamixel_hardware_interface::DynamixelHardwareInterface::getHardwareParameter</definition>
        <argsstring>(const std::string &amp;key, int &amp;parameter) const</argsstring>
        <name>getHardwareParameter</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/dynamixel_hardware_interface/dynamixel_hardware_interface/include/dynamixel_hardware_interface/dynamixel_hardware_interface.hpp" line="156" column="8" bodyfile="/home/runner/work/dynamixel_hardware_interface/dynamixel_hardware_interface/include/dynamixel_hardware_interface/dynamixel_hardware_interface.hpp" bodystart="156" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="classdynamixel__hardware__interface_1_1DynamixelHardwareInterface_1ae7bac45987d8ecb9c9bcb3054315c156" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void dynamixel_hardware_interface::DynamixelHardwareInterface::getHardwareParameter</definition>
        <argsstring>(const std::string &amp;key, bool &amp;parameter) const</argsstring>
        <name>getHardwareParameter</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/dynamixel_hardware_interface/dynamixel_hardware_interface/include/dynamixel_hardware_interface/dynamixel_hardware_interface.hpp" line="162" column="8" bodyfile="/home/runner/work/dynamixel_hardware_interface/dynamixel_hardware_interface/include/dynamixel_hardware_interface/dynamixel_hardware_interface.hpp" bodystart="162" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="classdynamixel__hardware__interface_1_1DynamixelHardwareInterface_1a4c26d257f0a29763c8cb35a65b98c9f6" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classdynamixel__hardware__interface_1_1MotorBase" kindref="compound">MotorBase</ref> &gt;</type>
        <definition>std::shared_ptr&lt; MotorBase &gt; dynamixel_hardware_interface::DynamixelHardwareInterface::constructMotorInstance</definition>
        <argsstring>(const hardware_interface::ComponentInfo &amp;info) const</argsstring>
        <name>constructMotorInstance</name>
        <param>
          <type>const hardware_interface::ComponentInfo &amp;</type>
          <declname>info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/dynamixel_hardware_interface/dynamixel_hardware_interface/include/dynamixel_hardware_interface/dynamixel_hardware_interface.hpp" line="171" column="19" bodyfile="/home/runner/work/dynamixel_hardware_interface/dynamixel_hardware_interface/src/dynamixel_hardware_interface.cpp" bodystart="152" bodyend="180"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Hardware interface for the dynamixel motor. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>hardware_interface::BaseInterface&lt; hardware_interface::SystemInterface &gt;</label>
      </node>
      <node id="1">
        <label>dynamixel_hardware_interface::DynamixelHardwareInterface</label>
        <link refid="classdynamixel__hardware__interface_1_1DynamixelHardwareInterface"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>hardware_interface::BaseInterface&lt; hardware_interface::SystemInterface &gt;</label>
      </node>
      <node id="1">
        <label>dynamixel_hardware_interface::DynamixelHardwareInterface</label>
        <link refid="classdynamixel__hardware__interface_1_1DynamixelHardwareInterface"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/dynamixel_hardware_interface/dynamixel_hardware_interface/include/dynamixel_hardware_interface/dynamixel_hardware_interface.hpp" line="63" column="1" bodyfile="/home/runner/work/dynamixel_hardware_interface/dynamixel_hardware_interface/include/dynamixel_hardware_interface/dynamixel_hardware_interface.hpp" bodystart="57" bodyend="176"/>
    <listofallmembers>
      <member refid="classdynamixel__hardware__interface_1_1DynamixelHardwareInterface_1a027ed49323b295436e1b0e30ca494a16" prot="private" virt="non-virtual"><scope>dynamixel_hardware_interface::DynamixelHardwareInterface</scope><name>baudrate_</name></member>
      <member refid="classdynamixel__hardware__interface_1_1DynamixelHardwareInterface_1ad0f44c8124d6768ac06cc181a850ee95" prot="public" virt="non-virtual"><scope>dynamixel_hardware_interface::DynamixelHardwareInterface</scope><name>configure</name></member>
      <member refid="classdynamixel__hardware__interface_1_1DynamixelHardwareInterface_1a4c26d257f0a29763c8cb35a65b98c9f6" prot="private" virt="non-virtual"><scope>dynamixel_hardware_interface::DynamixelHardwareInterface</scope><name>constructMotorInstance</name></member>
      <member refid="classdynamixel__hardware__interface_1_1DynamixelHardwareInterface_1af971786f88a914f534fe471c60a2aaad" prot="public" virt="non-virtual"><scope>dynamixel_hardware_interface::DynamixelHardwareInterface</scope><name>export_command_interfaces</name></member>
      <member refid="classdynamixel__hardware__interface_1_1DynamixelHardwareInterface_1a26334a17e6798229f799293bacf2c1bb" prot="public" virt="non-virtual"><scope>dynamixel_hardware_interface::DynamixelHardwareInterface</scope><name>export_state_interfaces</name></member>
      <member refid="classdynamixel__hardware__interface_1_1DynamixelHardwareInterface_1aacc0f26c12661efe1a11d2a9ffdadbbe" prot="private" virt="non-virtual"><scope>dynamixel_hardware_interface::DynamixelHardwareInterface</scope><name>getHardwareParameter</name></member>
      <member refid="classdynamixel__hardware__interface_1_1DynamixelHardwareInterface_1a08b5292c0bb72e759c5545737ac2a65f" prot="private" virt="non-virtual"><scope>dynamixel_hardware_interface::DynamixelHardwareInterface</scope><name>getHardwareParameter</name></member>
      <member refid="classdynamixel__hardware__interface_1_1DynamixelHardwareInterface_1a28c5ec187c8843d49d54e75193eb5a34" prot="private" virt="non-virtual"><scope>dynamixel_hardware_interface::DynamixelHardwareInterface</scope><name>getHardwareParameter</name></member>
      <member refid="classdynamixel__hardware__interface_1_1DynamixelHardwareInterface_1ae7bac45987d8ecb9c9bcb3054315c156" prot="private" virt="non-virtual"><scope>dynamixel_hardware_interface::DynamixelHardwareInterface</scope><name>getHardwareParameter</name></member>
      <member refid="classdynamixel__hardware__interface_1_1DynamixelHardwareInterface_1adc541294f39d35d046806028f7c309be" prot="private" virt="non-virtual"><scope>dynamixel_hardware_interface::DynamixelHardwareInterface</scope><name>getParameter</name></member>
      <member refid="classdynamixel__hardware__interface_1_1DynamixelHardwareInterface_1ab42cb398baff91138d26eae457f14a8c" prot="private" virt="non-virtual"><scope>dynamixel_hardware_interface::DynamixelHardwareInterface</scope><name>getParameter</name></member>
      <member refid="classdynamixel__hardware__interface_1_1DynamixelHardwareInterface_1a02ef84719c417fb8dbe6d4698c39e585" prot="private" virt="non-virtual"><scope>dynamixel_hardware_interface::DynamixelHardwareInterface</scope><name>getParameter</name></member>
      <member refid="classdynamixel__hardware__interface_1_1DynamixelHardwareInterface_1ae013f782a5399fbc4f56b61062970f67" prot="private" virt="non-virtual"><scope>dynamixel_hardware_interface::DynamixelHardwareInterface</scope><name>getParameter</name></member>
      <member refid="classdynamixel__hardware__interface_1_1DynamixelHardwareInterface_1a9a9e911e0edaf353ef5b0796e450a368" prot="private" virt="non-virtual"><scope>dynamixel_hardware_interface::DynamixelHardwareInterface</scope><name>motors_</name></member>
      <member refid="classdynamixel__hardware__interface_1_1DynamixelHardwareInterface_1aa8c186b3f47235c85fef99a21df929a1" prot="private" virt="non-virtual"><scope>dynamixel_hardware_interface::DynamixelHardwareInterface</scope><name>packet_handler_</name></member>
      <member refid="classdynamixel__hardware__interface_1_1DynamixelHardwareInterface_1afb5b736369ec24b89e3f9bee77e1cf3f" prot="private" virt="non-virtual"><scope>dynamixel_hardware_interface::DynamixelHardwareInterface</scope><name>port_handler_</name></member>
      <member refid="classdynamixel__hardware__interface_1_1DynamixelHardwareInterface_1a8b945e8e564bbde7abfd2e7d5b7447d4" prot="private" virt="non-virtual"><scope>dynamixel_hardware_interface::DynamixelHardwareInterface</scope><name>port_name_</name></member>
      <member refid="classdynamixel__hardware__interface_1_1DynamixelHardwareInterface_1acf4151e565e4ac699c2116c8ea5c0fdf" prot="public" virt="non-virtual"><scope>dynamixel_hardware_interface::DynamixelHardwareInterface</scope><name>read</name></member>
      <member refid="classdynamixel__hardware__interface_1_1DynamixelHardwareInterface_1a15f1ffbcb24f674dfb9cfd11e7b09d4d" prot="private" virt="non-virtual"><scope>dynamixel_hardware_interface::DynamixelHardwareInterface</scope><name>strToSupportMotorsEnum</name></member>
      <member refid="classdynamixel__hardware__interface_1_1DynamixelHardwareInterface_1a9392d65fc49a2d87071bd8dbeb2aa0f2" prot="public" virt="non-virtual"><scope>dynamixel_hardware_interface::DynamixelHardwareInterface</scope><name>write</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
